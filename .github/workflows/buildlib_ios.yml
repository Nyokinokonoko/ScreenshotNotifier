name: Build iOS Library

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-ios:
    name: Build iOS Library
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Xcode
        run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

      - name: Build iOS Library
        run: |
          cd NativePlugin/ios/make
          xcodebuild -project ScreenshotNotifier.xcodeproj -scheme ScreenshotNotifier -configuration Release -sdk iphoneos clean build
          mkdir -p ../../../UnityPackage/Runtime/Plugins/iOS/
          # Use the full path to the built library from Xcode's DerivedData
          find ~/Library/Developer/Xcode/DerivedData -name "libScreenshotNotifier.a" -type f -exec cp {} ../../../UnityPackage/Runtime/Plugins/iOS/ \;
          find ~/Library/Developer/Xcode/DerivedData -name "libScreenshotNotifier.a" -type f -exec cp {} ../lib/ \;

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd UnityPackage/Runtime/Plugins/iOS
          git add libScreenshotNotifier.a
          git commit -m "Update iOS library build in UnityPackage" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Commit to NativePlugin/ios/lib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd NativePlugin/ios/lib
          git add libScreenshotNotifier.a
          git commit -m "Update iOS library build in NativePlugin/ios/lib" || echo "No changes to commit"
          git push || echo "No changes to push"
